steps:
  # Docker Build for App Service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'gcr.io/${_PROJECT_ID}/deviqfront:$SHORT_SHA', 
           '.']

  # Docker Push App Service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'gcr.io/${_PROJECT_ID}/deviqfront:$SHORT_SHA']

  # Docker Build for Data Ingestion Service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'gcr.io/${_PROJECT_ID}/deviqingest:$SHORT_SHA', './backend']  

  # Docker Push Data Ingestion Service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'gcr.io/${_PROJECT_ID}/deviqingest:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/sh
    args:
    - '-c'
    - |
      sed "s|VAR_IMAGE_FRONT|gcr.io/${_PROJECT_ID}/deviqfront:$SHORT_SHA|g; s|VAR_IMAGE_INGEST|gcr.io/${_PROJECT_ID}/deviqingest:$SHORT_SHA|g"  kubernetesdev.yaml > kubernetes.yaml
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes.yaml']
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
    - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
  
substitutions:
  _PROJECT_ID: starlit-brand-407003
  _ZONE: us-east1
  _GKE_CLUSTER: starlit-brand-407003-gke
    
options:
  substitution_option: 'ALLOW_LOOSE'


